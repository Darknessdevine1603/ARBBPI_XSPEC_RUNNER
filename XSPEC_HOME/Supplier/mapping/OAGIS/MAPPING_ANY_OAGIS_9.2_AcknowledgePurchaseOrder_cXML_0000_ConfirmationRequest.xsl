<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">	<xsl:strip-space elements="*"/><xsl:strip-space elements="*"/><xsl:strip-space elements="*"/><xsl:output method="xml" indent="yes" omit-xml-declaration="yes"/>	<xsl:param name="output"/>	<xsl:param name="anSupplierANID"/>	<xsl:param name="anBuyerANID"/>	<xsl:param name="anProviderANID"/>	<xsl:param name="anPayloadID"/>	<xsl:param name="anEnvName"/>	<xsl:param name="upperAlpha">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xsl:param>	<xsl:param name="lowerAlpha">abcdefghijklmnopqrstuvwxyz</xsl:param>	<xsl:param name="cXMLAttachments"/>	<xsl:param name="anSenderDefaultTimeZone"/>	<xsl:param name="attachSeparator" select="'\|'"/>	<xsl:template match="/">		<xsl:variable name="BODID" select="concat(AcknowledgePurchaseOrder/ApplicationArea/BODID, '')"/>		<xsl:variable name="documentid"			select="concat(AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderHeader/DocumentID/ID, '')"/>		<xsl:variable name="CreationDateTime"			select="concat(AcknowledgePurchaseOrder/ApplicationArea/CreationDateTime, '')"/>		<cXML>			<xsl:attribute name="timestamp">				<xsl:value-of					select="concat(substring(string(current-dateTime()), 1, 19), $anSenderDefaultTimeZone)"/>			</xsl:attribute>			<xsl:attribute name="payloadID">				<xsl:value-of select="$anPayloadID"/>			</xsl:attribute>			<Header>				<From>					<Credential domain="NetworkID">						<Identity>							<xsl:value-of select="$anSupplierANID"/>						</Identity>					</Credential>				</From>				<To>					<Credential domain="NetworkID">						<Identity>							<xsl:value-of select="$anBuyerANID"/>						</Identity>					</Credential>				</To>				<Sender>					<Credential domain="NetworkId">						<Identity>							<xsl:value-of select="$anProviderANID"/>						</Identity>					</Credential>					<UserAgent>						<xsl:value-of select="'Ariba Supplier'"/>					</UserAgent>				</Sender>			</Header>			<Request>				<xsl:choose>					<xsl:when test="$anEnvName = 'PROD'">						<xsl:attribute name="deploymentMode">production</xsl:attribute>					</xsl:when>					<xsl:otherwise>						<xsl:attribute name="deploymentMode">test</xsl:attribute>					</xsl:otherwise>				</xsl:choose>				<ConfirmationRequest>					<ConfirmationHeader>						<xsl:attribute name="noticeDate">							<xsl:value-of								select="AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderHeader/Status[Code = 'PODate']/EffectiveDateTime"							/>						</xsl:attribute>						<xsl:attribute name="type">							<xsl:value-of								select="lower-case(AcknowledgePurchaseOrder/DataArea/Acknowledge/ResponseCriteria/ChangeStatus/Code)"							/>						</xsl:attribute>						<xsl:attribute name="operation">							<xsl:choose>								<xsl:when									test="AcknowledgePurchaseOrder/DataArea/Acknowledge/ResponseCriteria/ChangeStatus/Reason = 'new'">									<xsl:text>new</xsl:text>								</xsl:when>								<xsl:when									test="AcknowledgePurchaseOrder/DataArea/Acknowledge/ResponseCriteria/ChangeStatus/Reason = 'update'">									<xsl:text>update</xsl:text>								</xsl:when>							</xsl:choose>						</xsl:attribute>						<xsl:attribute name="confirmID">							<xsl:value-of								select="AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderHeader/DocumentID/ID"							/>						</xsl:attribute>						<xsl:if							test="AcknowledgePurchaseOrder/DataArea/Acknowledge/ResponseCriteria/ChangeStatus/Reason = 'update'">							<DocumentReference>								<xsl:attribute name="payloadID">									<xsl:value-of										select="AcknowledgePurchaseOrder/DataArea/Acknowledge/OriginalApplicationArea/BODID"									/>								</xsl:attribute>							</DocumentReference>						</xsl:if>						<xsl:if test="$cXMLAttachments != ''">							<Comments>								<xsl:variable name="tokenizedAttachments"									select="tokenize($cXMLAttachments, $attachSeparator)"/>								<xsl:for-each select="$tokenizedAttachments">									<xsl:if test="normalize-space(.) != ''">										<Attachment>											<URL>												<xsl:value-of select="."/>											</URL>										</Attachment>									</xsl:if>								</xsl:for-each>							</Comments>						</xsl:if>					</ConfirmationHeader>					<OrderReference>						<xsl:attribute name="orderDate">							<xsl:value-of								select="AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderHeader/DocumentDateTime"							/>						</xsl:attribute>						<xsl:attribute name="orderID">							<xsl:value-of								select="AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderHeader/DocumentID/ID"							/>						</xsl:attribute>						<DocumentReference>							<xsl:attribute name="payloadID">								<xsl:if									test="AcknowledgePurchaseOrder/DataArea/Acknowledge/OriginalApplicationArea[Sender/TaskID = 'PurchaseOrder' or Sender/TaskID = 'ChangePurchaseOrder']/BODID != ''">									<xsl:value-of										select="AcknowledgePurchaseOrder/DataArea/Acknowledge/OriginalApplicationArea[Sender/TaskID = 'PurchaseOrder' or Sender/TaskID = 'ChangePurchaseOrder']/BODID"									/>								</xsl:if>							</xsl:attribute>						</DocumentReference>					</OrderReference>					<xsl:for-each select="AcknowledgePurchaseOrder/DataArea/PurchaseOrder/PurchaseOrderLine">						<ConfirmationItem>							<xsl:attribute name="lineNumber">								<xsl:value-of select="LineNumber"/>							</xsl:attribute>							<xsl:attribute name="quantity">								<xsl:value-of select="OpenQuantity"/>							</xsl:attribute>							<UnitOfMeasure>								<xsl:value-of select="OpenQuantity/@unitCode"/>							</UnitOfMeasure>							<xsl:variable name="headerResponseType"								select="lower-case(Status/Code[@name = 'ResponseType'])"/>							<xsl:variable name="LineComments1" select="normalize-space(Description)"/>							<xsl:choose>								<xsl:when test="PurchaseOrderSchedule">									<xsl:for-each select="PurchaseOrderSchedule">										<ConfirmationStatus>											<xsl:attribute name="type">												<xsl:choose>													<xsl:when														test="lower-case(UserArea/Status/Code[@name = 'ResponseType']) != ''">														<xsl:value-of															select="lower-case(UserArea/Status/Code[@name = 'ResponseType'])"/>													</xsl:when>													<xsl:when test="$headerResponseType = 'accept'">														<xsl:text>accept</xsl:text>													</xsl:when>													<xsl:when test="$headerResponseType = 'detail'">														<xsl:text>detail</xsl:text>													</xsl:when>													<xsl:when test="$headerResponseType = 'reject'">														<xsl:text>reject</xsl:text>													</xsl:when>												</xsl:choose>											</xsl:attribute>											<xsl:attribute name="quantity">												<xsl:value-of select="Quantity"/>											</xsl:attribute>											<xsl:if												test="lower-case(UserArea/Status/Code[@name = 'ResponseType']) != 'reject' and lower-case(UserArea/Status/Code[@name = 'ResponseType']) != 'unknown'">												<xsl:attribute name="shipmentDate">													<xsl:value-of														select="UserArea/Status[Code = 'ShipDate']/EffectiveDateTime"/>												</xsl:attribute>												<xsl:attribute name="deliveryDate">													<xsl:value-of select="RequiredDeliveryDateTime"/>												</xsl:attribute>											</xsl:if>											<UnitOfMeasure>												<xsl:value-of select="Quantity/@unitCode"/>											</UnitOfMeasure>											<xsl:if												test="(lower-case(UserArea/Status/Code[@name = 'ResponseType']) != 'reject' and lower-case(UserArea/Status/Code[@name = 'ResponseType']) != 'unknown') and UserArea/SerializedLot/Lot/LotIDs/ID != ''">												<SupplierBatchID>													<xsl:value-of select="UserArea/SerializedLot/Lot/LotIDs/ID"/>												</SupplierBatchID>											</xsl:if>											<xsl:choose>												<xsl:when test="normalize-space(Description) != ''">													<Comments>														<xsl:value-of select="normalize-space(Description)"/>													</Comments>												</xsl:when>												<xsl:when test="$LineComments1 != ''">													<Comments>														<xsl:value-of select="$LineComments1"/>													</Comments>												</xsl:when>											</xsl:choose>										</ConfirmationStatus>									</xsl:for-each>								</xsl:when>								<xsl:otherwise>									<ConfirmationStatus>										<xsl:attribute name="type">											<xsl:choose>												<xsl:when test="$headerResponseType = 'accept'">													<xsl:text>accept</xsl:text>												</xsl:when>												<xsl:when test="$headerResponseType = 'detail'">													<xsl:text>detail</xsl:text>												</xsl:when>												<xsl:when test="$headerResponseType = 'reject'">													<xsl:text>reject</xsl:text>												</xsl:when>											</xsl:choose>										</xsl:attribute>										<xsl:attribute name="quantity">											<xsl:value-of select="OpenQuantity"/>										</xsl:attribute>										<UnitOfMeasure>											<xsl:value-of select="OpenQuantity/@unitCode"/>										</UnitOfMeasure>										<xsl:if test="$LineComments1 != ''">											<Comments>												<xsl:value-of select="$LineComments1"/>											</Comments>										</xsl:if>									</ConfirmationStatus>								</xsl:otherwise>							</xsl:choose>						</ConfirmationItem>					</xsl:for-each>				</ConfirmationRequest>			</Request>		</cXML>	</xsl:template></xsl:stylesheet>
